// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaVenta.DAL.DBContext;

#nullable disable

namespace SistemaVenta.DAL.Migrations
{
    [DbContext(typeof(DbventaContext))]
    [Migration("20230311144754_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SistemaVenta.Entity.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCategoria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion");

                    b.Property<bool?>("EsActivo")
                        .HasColumnType("bit")
                        .HasColumnName("esActivo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("IdCategoria")
                        .HasName("PK__Categori__8A3D240C512DD09F");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Configuracion", b =>
                {
                    b.Property<string>("Propiedad")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("propiedad");

                    b.Property<string>("Recurso")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("recurso");

                    b.Property<string>("Valor")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("valor");

                    b.ToTable("Configuracion", (string)null);
                });

            modelBuilder.Entity("SistemaVenta.Entity.DetalleMovimiento", b =>
                {
                    b.Property<int>("IdDetalleMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDetalleMovimiento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleMovimiento"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<string>("DescripcionProducto")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descripcionProducto");

                    b.Property<int?>("IdMovimiento")
                        .HasColumnType("int")
                        .HasColumnName("idMovimiento");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total");

                    b.HasKey("IdDetalleMovimiento")
                        .HasName("PK__DetalleV__BFE2843FB3D3EFB5");

                    b.HasIndex("IdMovimiento");

                    b.HasIndex("IdProducto");

                    b.ToTable("DetalleMovimiento");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Menu", b =>
                {
                    b.Property<int>("IdMenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMenu");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMenu"));

                    b.Property<string>("Controlador")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("controlador");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("descripcion");

                    b.Property<bool?>("EsActivo")
                        .HasColumnType("bit")
                        .HasColumnName("esActivo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Icono")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("icono");

                    b.Property<int?>("IdMenuPadre")
                        .HasColumnType("int")
                        .HasColumnName("idMenuPadre");

                    b.Property<string>("PaginaAccion")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("paginaAccion");

                    b.HasKey("IdMenu")
                        .HasName("PK__Menu__C26AF483A6068BB7");

                    b.HasIndex("IdMenuPadre");

                    b.ToTable("Menu", (string)null);
                });

            modelBuilder.Entity("SistemaVenta.Entity.Movimiento", b =>
                {
                    b.Property<int>("IdMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMovimiento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMovimiento"));

                    b.Property<string>("DocumentoCliente")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("documentoCliente");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoDocumentoMovimiento")
                        .HasColumnType("int")
                        .HasColumnName("idTipoDocumentoMovimiento");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<decimal?>("ImpuestoTotal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("impuestoTotal");

                    b.Property<string>("NombreCliente")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("nombreCliente");

                    b.Property<string>("NumeroDocumentoExterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroMovimiento")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("numeroMovimiento");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("subTotal");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("IdMovimiento")
                        .HasName("PK__Movimiento__077D56148B22AC5G");

                    b.HasIndex("IdProveedor");

                    b.HasIndex("IdTipoDocumentoMovimiento");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Movimiento");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Negocio", b =>
                {
                    b.Property<int>("IdNegocio")
                        .HasColumnType("int")
                        .HasColumnName("idNegocio");

                    b.Property<string>("Correo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("correo");

                    b.Property<string>("Direccion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("direccion");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("NombreLogo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombreLogo");

                    b.Property<string>("NumeroDocumento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("numeroDocumento");

                    b.Property<decimal?>("PorcentajeImpuesto")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("porcentajeImpuesto");

                    b.Property<string>("SimboloMoneda")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("simboloMoneda");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("telefono");

                    b.Property<string>("UrlLogo")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("urlLogo");

                    b.HasKey("IdNegocio")
                        .HasName("PK__Negocio__70E1E1076DE9A588");

                    b.ToTable("Negocio", (string)null);
                });

            modelBuilder.Entity("SistemaVenta.Entity.NumeroCorrelativo", b =>
                {
                    b.Property<int>("IdNumeroCorrelativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idNumeroCorrelativo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNumeroCorrelativo"));

                    b.Property<int?>("CantidadDigitos")
                        .HasColumnType("int")
                        .HasColumnName("cantidadDigitos");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaActualizacion");

                    b.Property<string>("Gestion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("gestion");

                    b.Property<int?>("UltimoNumero")
                        .HasColumnType("int")
                        .HasColumnName("ultimoNumero");

                    b.HasKey("IdNumeroCorrelativo")
                        .HasName("PK__NumeroCo__25FB547E65A40777");

                    b.ToTable("NumeroCorrelativo", (string)null);
                });

            modelBuilder.Entity("SistemaVenta.Entity.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<string>("CodigoBarra")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("codigoBarra");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descripcion");

                    b.Property<bool?>("EsActivo")
                        .HasColumnType("bit")
                        .HasColumnName("esActivo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("idCategoria");

                    b.Property<int?>("IdProveedor")
                        .HasColumnType("int")
                        .HasColumnName("idProveedor");

                    b.Property<decimal?>("Imp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Marca")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("marca");

                    b.Property<string>("NombreImagen")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombreImagen");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio");

                    b.Property<decimal?>("PrecioCompra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("stock");

                    b.Property<string>("UrlImagen")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("urlImagen");

                    b.HasKey("IdProducto")
                        .HasName("PK__Producto__07F4A132797CBE6F");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdProveedor");

                    b.ToTable("Producto", (string)null);
                });

            modelBuilder.Entity("SistemaVenta.Entity.Proveedor", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProveedor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProveedor"));

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("correo");

                    b.Property<bool?>("EsActivo")
                        .HasColumnType("bit")
                        .HasColumnName("esActivo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NIT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("telefono");

                    b.HasKey("IdProveedor")
                        .HasName("PK__Proveedor__645723A6ACC301A0");

                    b.ToTable("Proveedor", (string)null);
                });

            modelBuilder.Entity("SistemaVenta.Entity.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idRol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("descripcion");

                    b.Property<bool?>("EsActivo")
                        .HasColumnType("bit")
                        .HasColumnName("esActivo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("IdRol")
                        .HasName("PK__Rol__3C872F7648303C61");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("SistemaVenta.Entity.RolMenu", b =>
                {
                    b.Property<int>("IdRolMenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idRolMenu");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRolMenu"));

                    b.Property<bool?>("EsActivo")
                        .HasColumnType("bit")
                        .HasColumnName("esActivo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdMenu")
                        .HasColumnType("int")
                        .HasColumnName("idMenu");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("idRol");

                    b.HasKey("IdRolMenu")
                        .HasName("PK__RolMenu__CD2045D88E5957FC");

                    b.HasIndex("IdMenu");

                    b.HasIndex("IdRol");

                    b.ToTable("RolMenu", (string)null);
                });

            modelBuilder.Entity("SistemaVenta.Entity.TipoDocumentoMovimiento", b =>
                {
                    b.Property<int>("IdTipoDocumentoMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idTipoDocumentoMovimiento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoDocumentoMovimiento"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion");

                    b.Property<bool?>("EsActivo")
                        .HasColumnType("bit")
                        .HasColumnName("esActivo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Naturaleza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoDocumentoMovimiento")
                        .HasName("PK__TipoDocu__A9D59AEE8BEB6B2E");

                    b.ToTable("TipoDocumentoMovimiento");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Clave")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("clave");

                    b.Property<string>("Correo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("correo");

                    b.Property<bool?>("EsActivo")
                        .HasColumnType("bit")
                        .HasColumnName("esActivo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("idRol");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("NombreFoto")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombreFoto");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("telefono");

                    b.Property<string>("UrlFoto")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("urlFoto");

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuario__645723A6ACC301A0");

                    b.HasIndex("IdRol");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("SistemaVenta.Entity.DetalleMovimiento", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Movimiento", "IdMovimientoNavigation")
                        .WithMany("DetalleMovimiento")
                        .HasForeignKey("IdMovimiento")
                        .HasConstraintName("FK__DetalleVe__idVen__440B1D61");

                    b.HasOne("SistemaVenta.Entity.Producto", "IdProductoNavigation")
                        .WithMany("DetalleMovimiento")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DetalleMovimiento_Producto");

                    b.Navigation("IdMovimientoNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Menu", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Menu", "IdMenuPadreNavigation")
                        .WithMany("InverseIdMenuPadreNavigation")
                        .HasForeignKey("IdMenuPadre")
                        .HasConstraintName("FK__Menu__idMenuPadr__24927208");

                    b.Navigation("IdMenuPadreNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Movimiento", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Proveedor", "IdProveedorNavigation")
                        .WithMany("Movimiento")
                        .HasForeignKey("IdProveedor")
                        .HasConstraintName("FK__Movimiento__idProveedor__403A8C7D");

                    b.HasOne("SistemaVenta.Entity.TipoDocumentoMovimiento", "IdTipoDocumentoMovimientoNavigation")
                        .WithMany("Movimiento")
                        .HasForeignKey("IdTipoDocumentoMovimiento")
                        .HasConstraintName("FK__Movimiento__idTipoDoc__3F466844");

                    b.HasOne("SistemaVenta.Entity.Usuario", "IdUsuarioNavigation")
                        .WithMany("Movimiento")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__Movimiento__idUsuario__403A8C7D");

                    b.Navigation("IdProveedorNavigation");

                    b.Navigation("IdTipoDocumentoMovimientoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Producto", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Categoria", "IdCategoriaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoria")
                        .HasConstraintName("FK__Producto__idCate__36B12243");

                    b.HasOne("SistemaVenta.Entity.Proveedor", "IdProveedorNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdProveedor")
                        .HasConstraintName("FK__Producto__idProv__36B12244");

                    b.Navigation("IdCategoriaNavigation");

                    b.Navigation("IdProveedorNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.RolMenu", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Menu", "IdMenuNavigation")
                        .WithMany("RolMenus")
                        .HasForeignKey("IdMenu")
                        .HasConstraintName("FK__RolMenu__idMenu__2C3393D0");

                    b.HasOne("SistemaVenta.Entity.Rol", "IdRolNavigation")
                        .WithMany("RolMenus")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK__RolMenu__idRol__2B3F6F97");

                    b.Navigation("IdMenuNavigation");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Usuario", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Rol", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK__Usuario__idRol__300424B4");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Menu", b =>
                {
                    b.Navigation("InverseIdMenuPadreNavigation");

                    b.Navigation("RolMenus");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Movimiento", b =>
                {
                    b.Navigation("DetalleMovimiento");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Producto", b =>
                {
                    b.Navigation("DetalleMovimiento");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Proveedor", b =>
                {
                    b.Navigation("Movimiento");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Rol", b =>
                {
                    b.Navigation("RolMenus");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SistemaVenta.Entity.TipoDocumentoMovimiento", b =>
                {
                    b.Navigation("Movimiento");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Usuario", b =>
                {
                    b.Navigation("Movimiento");
                });
#pragma warning restore 612, 618
        }
    }
}
